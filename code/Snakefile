# Specify the path to the configuration file
configfile: 'config_files/encoder_mlp_config_gpu4.yaml'
input_dir = config['input_settings']['input_dir']
dataset_dir = config['dataset_dir']
output_dir = config['output_settings']['output_dir']

rule synergy_features_prep:
    input:
        processed_syn_file = input_dir + 'synergy/synergy_scores.tsv',
        drug_smiles_file = input_dir + 'drug/smiles.tsv',
        drug_graph_file = input_dir + 'drug/molecular_graph.pickle',
        drug_target_file =input_dir + 'drug/target.tsv',
        cell_line_file = input_dir + 'cell-line/gene_expression.tsv'

rule download_synergy:
    output:
        dcomb_raw_syn_file = dataset_dir + 'synergy/drugcomb_raw_summary.csv',
        dcomb_drug_file = dataset_dir + 'synergy/drugcomb_drug_data.csv',
        dcomb_cell_line_file = dataset_dir + 'synergy/drugcomb_cell_line_data.csv'
    params:
        'download'
    script:
        'data_processing/synergy_data_prep.py'

rule map_synergy:
    input:
        dcomb_raw_syn_file = dataset_dir + 'synergy/drugcomb_raw_summary.csv',
        dcomb_drug_file = dataset_dir + 'synergy/drugcomb_drug_data.csv',
        dcomb_cell_line_file = dataset_dir + 'synergy/drugcomb_cell_line_data.csv'
    output:
        mapped_syn_filename = input_dir + 'synergy/drugcomb_mapped_summary.csv'
    params:
        'map'
    script:
        'data_processing/synergy_data_prep.py'

rule drug_to_pid:
    input:
        mapped_syn_filename = input_dir + 'synergy/drugcomb_mapped_summary.csv'
    output:
        drug_name_to_pcomp_file = input_dir + 'drug/drug_name_to_pubchem_compound.pickle'
    params:
        'pid_map'
    script:
        'data_processing/drug_property_preprocess.py'

rule aggr_filter_synergy:
    input:
        mapped_syn_filename = input_dir + 'synergy/drugcomb_mapped_summary.csv',
        drug_name_to_pcomp_file = input_dir + 'drug/drug_name_to_pubchem_compound.pickle'

    output:
        processed_syn_file=input_dir + 'synergy/synergy_scores.tsv',
        stat_file = input_dir + '/stat/synergy_stat.txt'

    params:
        'aggr'
    script:
        'data_processing/synergy_data_prep.py'

rule extract_drug_properties:
    input:
        drug_name_to_pcomp_file = '/home/grads/tasnina/Projects/Plug and Play/inputs/drug/drug_name_to_pubchem_compound.pickle'
    output:
        drug_smiles_file = input_dir + 'drug/smiles.tsv',
        drug_graph_file= input_dir + 'drug/molecular_graph.pickle',
        drug_chemprop_dir= directory(input_dir + '/drug/chemprop/')
    params:
        'property'
    script:
        'data_processing/drug_property_preprocess.py'

rule extract_drug_targets:
    input:
        TTD_drug_target_file = dataset_dir + 'drug/TTD/P1-07-Drug-TargetMapping.csv',
        TTD_target_file = dataset_dir + 'drug/TTD/P2-01-TTD_uniprot_all_metadata_removed.txt',
        TTD_drug_file = dataset_dir + 'drug/TTD/P1-03-TTD_crossmatching_metadata_removed.txt',
        drug_name_to_pcomp_file = input_dir + 'drug/drug_name_to_pubchem_compound.pickle'
    output:
        input_dir + '/drug/target.tsv'
    script:
        'data_processing/drug_target_preprocess.py'

rule extract_cell_line:
    input:
        ccle_expr_file = dataset_dir + 'cell-line/CCLE2012/CCLE_Expression_2012-09-29.res',
        ccle_cell_id_file = dataset_dir + 'cell-line/CCLE2012/CCLE_Expression.Arrays.sif_2012-10-18.txt'
    output:
        processed_ccle_file = input_dir + 'cell-line/gene_expression.tsv'
    script:
        'data_processing/cell_line_preprocess.py'


# rule split_leave_comb:
#     input:
#         processed_syn_file=input_dir + 'synergy/synergy_scores.tsv'
#     params:
#             split_type = 'leave_comb',
#             n_folds = 5,
#             out_dir=input_dir + 'splits'
#     script:
#             'evaluation/split.py'


rule run_models:
    input:
        processed_syn_file=input_dir + 'synergy/synergy_scores.tsv',
        drug_smiles_file=input_dir + 'drug/smiles.tsv',
        drug_graph_file=input_dir + 'drug/molecular_graph.pickle',
        drug_target_file=input_dir + 'drug/target.tsv',
        cell_line_file=input_dir + 'cell-line/gene_expression.tsv'

    params:
        drug_features = config['input_settings']['drug_features'],
        cell_line_features = config['input_settings']['cell_line_features'],
        models = config['input_settings']['models'],
        splits = config['input_settings']['splits'],
        feature = config['input_settings']['feature'],
        drug_chemprop_dir= directory(input_dir + '/drug/drug_chemprop'),
        out_dir = directory(output_dir),
        split_dir = directory (input_dir + 'splits')


    script:
        'main.py'

